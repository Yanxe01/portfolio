
/* components/AnimatedBackground.css */

.animated-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  pointer-events: none;
  z-index: -1;
  transition: background-color 0.3s ease;
}

.animated-background.light-mode {
  background-color: #ffffff;
}

.animated-background.dark-mode {
  background: linear-gradient(135deg, #2f2f2f, #7a7a7a); /* Dark gray to lighter gray gradient */
}

.animation-container {
  position: relative;
  width: 100%;
  height: 100%;
}

/* ===================
   FLOATING SHAPES
   =================== */

.animated-shape {
  position: absolute;
  pointer-events: none;
  animation: float var(--animation-duration, 20s) ease-in-out infinite;
}

.animated-shape.shape-circle {
  border-radius: 50%;
  animation: float var(--animation-duration, 20s) ease-in-out infinite,
             pulse calc(var(--animation-duration, 20s) * 0.7) ease-in-out infinite;
}

.animated-shape.shape-square {
  animation: float var(--animation-duration, 20s) ease-in-out infinite,
             rotate var(--rotation-duration, 15s) linear infinite;
}

.animated-shape.shape-triangle {
  width: 0 !important;
  height: 0 !important;
  background: transparent !important;
  animation: float var(--animation-duration, 20s) ease-in-out infinite reverse;
}

.animated-shape.shape-triangle::before {
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  border-left: calc(var(--size, 20px) / 2) solid transparent;
  border-right: calc(var(--size, 20px) / 2) solid transparent;
  border-bottom: var(--size, 20px) solid;
  border-bottom-color: inherit;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
}

/* Shape colors */
.animated-shape.light-mode {
  background-color: #000000;
}

.animated-shape.dark-mode {
  background-color: #ffffff;
}

.animated-shape.shape-triangle.light-mode::before {
  border-bottom-color: #000000;
}

.animated-shape.shape-triangle.dark-mode::before {
  border-bottom-color: #ffffff;
}

/* ===================
   GENTLE WAVES
   =================== */

.animated-wave {
  position: absolute;
  left: -100px;
  width: calc(100vw + 200px);
  pointer-events: none;
  animation: wave var(--wave-duration, 25s) linear infinite;
}

.wave-element {
  width: 150px;
  height: 100%;
  border-radius: 2px;
  animation: inherit;
}

.animated-wave.light-mode .wave-element {
  background-color: #000000;
}

.animated-wave.dark-mode .wave-element {
  background-color: #ffffff;
}

/* ===================
   MOVING DOTS
   =================== */

.animated-dot {
  position: absolute;
  border-radius: 50%;
  pointer-events: none;
  animation: dotFloat var(--animation-duration, 20s) ease-in-out infinite,
             dotPulse var(--pulse-duration, 4s) ease-in-out infinite;
}

.animated-dot.light-mode {
  background-color: #000000;
}

.animated-dot.dark-mode {
  background-color: #ffffff;
}

/* ===================
   KEYFRAME ANIMATIONS
   =================== */

@keyframes float {
  0%, 100% {
    transform: translateY(0px) translateX(0px) rotate(0deg);
  }
  25% {
    transform: translateY(calc(var(--move-distance, 30px) * -0.7)) 
               translateX(calc(var(--move-distance, 30px) * 0.3)) 
               rotate(90deg);
  }
  50% {
    transform: translateY(calc(var(--move-distance, 30px) * -0.4)) 
               translateX(calc(var(--move-distance, 30px) * -0.5)) 
               rotate(180deg);
  }
  75% {
    transform: translateY(calc(var(--move-distance, 30px) * -0.9)) 
               translateX(calc(var(--move-distance, 30px) * 0.2)) 
               rotate(270deg);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: var(--base-opacity, 0.2);
    transform: scale(1);
  }
  50% {
    opacity: calc(var(--base-opacity, 0.2) * 2);
    transform: scale(1.15);
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes wave {
  0% {
    transform: translateX(-150px);
  }
  100% {
    transform: translateX(calc(100vw + 50px));
  }
}

@keyframes dotFloat {
  0%, 100% {
    transform: translateY(0px) translateX(0px);
  }
  25% {
    transform: translateY(-15px) translateX(8px);
  }
  50% {
    transform: translateY(-8px) translateX(-12px);
  }
  75% {
    transform: translateY(-20px) translateX(5px);
  }
}

@keyframes dotPulse {
  0%, 100% {
    opacity: var(--base-opacity, 0.2);
    transform: scale(1);
  }
  50% {
    opacity: calc(var(--base-opacity, 0.2) * 2.5);
    transform: scale(1.2);
  }
}

/* ===================
   SPEED VARIATIONS
   =================== */

.animated-background.slow .animated-shape {
  animation-duration: 30s;
}

.animated-background.slow .animated-wave {
  animation-duration: 40s;
}

.animated-background.slow .animated-dot {
  animation-duration: 35s;
}

.animated-background.fast .animated-shape {
  animation-duration: 12s;
}

.animated-background.fast .animated-wave {
  animation-duration: 15s;
}

.animated-background.fast .animated-dot {
  animation-duration: 10s;
}

/* ===================
   RESPONSIVE DESIGN
   =================== */

@media (max-width: 768px) {
  .animated-shape {
    transform: scale(0.8);
  }
  
  .animated-dot {
    transform: scale(0.9);
  }
  
  .wave-element {
    width: 100px;
  }
}

@media (max-width: 480px) {
  .animated-shape {
    transform: scale(0.6);
  }
  
  .animated-dot {
    transform: scale(0.7);
  }
  
  .wave-element {
    width: 80px;
  }
}

/* ===================
   ACCESSIBILITY
   =================== */

@media (prefers-reduced-motion: reduce) {
  .animated-background * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ===================
   PERFORMANCE OPTIMIZATION
   =================== */

.animated-shape,
.animated-wave,
.animated-dot {
  will-change: transform, opacity;
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Force GPU acceleration for smooth animations */
.animation-container {
  transform: translateZ(0);
}

